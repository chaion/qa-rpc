TestSet	execute	usePreparedData	testDescription	id	method	params	runtimeVal	storeVariables	preStoreVariables
params=null									
			eth_accounts	eth_accounts	requestMethod.eth_accounts	null			
			eth_blockNumber	eth_blockNumber	requestMethod.eth_blockNumber	null			
			eth_coinbase	eth_coinbase	requestMethod.eth_coinbase	null			
			eth_gasPrice	eth_gasPrice	requestMethod.eth_gasPrice	null			
			eth_getBalance	eth_getBalance	requestMethod.eth_getBalance	null			
			eth_getBlockTransactionCountByNumber	eth_getBlockTransactionCountByNumber	requestMethod.eth_getBlockTransactionCountByNumber	null			
			eth_getBlockTransactionCountByHash	eth_getBlockTransactionCountByHash	requestMethod.eth_getBlockTransactionCountByHash	null			
			eth_getCompilers	eth_getCompilers	requestMethod.eth_getCompilers	null			
			eth_mining	eth_mining	requestMethod.eth_mining	null			
			eth_protocolVersion	eth_protocolVersion	requestMethod.eth_protocolVersion	null			
			eth_syncing	eth_syncing	requestMethod.eth_syncing	null			
			eth_getTransactionReceipt	eth_getTransactionReceipt	requestMethod.eth_getTransactionReceipt	null			
			eth_sign	eth_sign	requestMethod.eth_sign	null			
			eth_estimateGas	eth_estimateGas	requestMethod.eth_estimateGas	null			
			eth_sendTransaction	eth_sendTransaction	requestMethod.eth_sendTransaction	null			
			eth_compileSolidity	eth_compileSolidity	requestMethod.eth_compileSolidity	null			
			eth_getCode	eth_getCode	requestMethod.eth_getCode	null			
			eth_getLogs	eth_getLogs	requestMethod.eth_getLogs	null			
			eth_call	eth_call	requestMethod.eth_call	null			
			eth_getBlockByNumber	eth_getBlockByNumber	requestMethod.eth_getBlockByNumber	null			
			eth_getStorageAt	eth_getStorageAt	requestMethod.eth_getStorageAt	null			
			eth_getTransactionCount	eth_getTransactionCount	requestMethod.eth_getTransactionCount	null			
			eth_sendRawTransaction	eth_sendRawTransaction	requestMethod.eth_sendRawTransaction	null			
			eth_signTransaction	eth_signTransaction	requestMethod.eth_signTransaction	null			
			eth_newBlockFilter	eth_newBlockFilter	requestMethod.eth_newBlockFilter	null			
			eth_newPendingTransactionFilter	eth_newPendingTransactionFilter	requestMethod.eth_newPendingTransactionFilter	null			
			eth_newFilter	eth_newFilter	requestMethod.eth_newFilter	null			
			eth_getFilterChanges	eth_getFilterChanges	requestMethod.eth_getFilterChanges	null			
			eth_getFilterLogs	eth_getFilterLogs	requestMethod.eth_getFilterLogs	null			
			eth_uninstallFilter	eth_uninstallFilter	requestMethod.eth_uninstallFilter	null			
			eth_getTransactionByBlockNumberAndIndex	eth_getTransactionByBlockNumberAndIndex	requestMethod.eth_getTransactionByBlockNumberAndIndex	null			
			eth_hashrate	eth_hashrate	requestMethod.eth_hashrate	null			
			eth_submitHashrate	eth_submitHashrate	requestMethod.eth_submitHashrate	null			
			personal_isAccountUnlocked	personal_isAccountUnlocked	requestMethod.personal_isAccountUnlocked	null			
			personal_lockAccount	personal_lockAccount	requestMethod.personal_lockAccount	null			
			personal_unlockAccount	personal_unlockAccount	requestMethod.personal_unlockAccount	null			
			personal_newAccount	personal_newAccount	requestMethod.personal_newAccount	null			
			personal_listAccounts	personal_listAccounts	requestMethod.personal_listAccounts	null			
			net_listening	net_listening	requestMethod.net_listening	null			
			net_peerCount	net_peerCount	requestMethod.net_peerCount	null			
			net_version	net_version	requestMethod.net_version	null			
			rpc_modules	rpc_modules	requestMethod.rpc_modules	null			
			web3_clientVersion	web3_clientVersion	requestMethod.web3_clientVersion	null			
			getMinerStats	getMinerStats	requestMethod.getMinerStats	null			
			getblocktemplate	getblocktemplate	requestMethod.getblocktemplate	null			
			getHeaderByBlockNumber	getHeaderByBlockNumber	requestMethod.getHeaderByBlockNumber	null			
			submitblock	submitblock	requestMethod.submitblock	null			
									
missing blockTag									
			getBalance	getBalance	requestMethod.eth_getBalance	[_acc1]			acc1=0xa054340a3152d10006b66c4248cfa73e5725056294081c476c0e67ef5ad25334,acc2=0xa00a2d0d10ce8a2ea47a76fbb935405df2a12b0e2bc932f188f84b5f16da9c2c
			getTransactionCount	getTransactionCount	requestMethod.eth_getTransactionCount	[_acc1]			
			getTransactionByBlockNumberAndIndex	getTransactionByBlockNumberAndIndex	requestMethod.eth_getTransactionByBlockNumberAndIndex	[0x0]			
			getHeaderByBlockNumber	getHeaderByBlockNumber	requestMethod.getHeaderByBlockNumber	[]			
									
eth_call for a method that manipulates variables									
			eth_compileSolidity	eth_compileSolidity	requestMethod.eth_compileSolidity	recursive.sol			acc1=0xa054340a3152d10006b66c4248cfa73e5725056294081c476c0e67ef5ad25334,acc2=0xa00a2d0d10ce8a2ea47a76fbb935405df2a12b0e2bc932f188f84b5f16da9c2c
			personal_unlockAccount	personal_unlockAccount	requestMethod.personal_unlockAccount	[_acc1,password,120]			
			prepare deployment	prepare deployment	helper.newContract	[Recursive]			
		x	eth_sendTransaction	eth_sendTransaction	requestMethod.eth_sendTransaction	[{from:_acc1,gas:5000000}]		result=>txHash	
			getTxReceipt	getTxReceipt	requestMethod.eth_getTransactionReceipt	[_txHash]			
			get deployed tx object	get deployed tx object	requestMethod.eth_getTransactionByHash	[_txHash]			
			prepare function call	prepare function call	helper.prepareContractCall	[f,_contractAddress,3]			
		x	eth_call	eth_call	requestMethod.eth_call	[{from:_acc1,to:_contractAddress}]			
			eth_getStorageAt missing blockNumber	eth_getStorageAt	requestMethod.eth_getStorageAt	[_contractAddress,0]			
									
empty filter Object									
			eth_getLogs	eth_getLogs	requestMethod.eth_getLogs	[{}]			
			eth_newFilter	eth_newFilter	requestMethod.eth_newFilter	[{}]			
									
getBlockByNumber one param									
			eth_getBlockByNumber	eth_getBlockByNumber	requestMethod.eth_getBlockByNumber	[0x0]			
									
Invalid contract									
			eth_compileSolidity	eth_compileSolidity	requestMethod.eth_compileSolidity	cryptoketties.sol			
									
uninstall a uninstalled filter (Block)									
			create New Block Filter	Invalid-uninstall-filter-block-1	requestMethod.eth_newBlockFilter	[]		result=>filterID	
			uninstall the block Filter	Invalid-uninstall-filter-block-2	requestMethod.eth_uninstallFilter	[_filterID]			
			delay	delay	helper.delay	[500]			
			uninstall the uninstalled Block filter	Invalid-uninstall-filter-block-3	requestMethod.eth_uninstallFilter	[_filterID]			
									
uninstall a uninstalled filter (pending tx)									
			create New Block Filter	Invalid-uninstall-filter-ptx-1	requestMethod.eth_newPendingTransactionFilter	[]		result=>filterID	
			uninstall the block Filter	Invalid-uninstall-filter-ptx-2	requestMethod.eth_uninstallFilter	[_filterID]			
			delay	delay	helper.delay	[500]			
			uninstall the uninstalled Block filter	Invalid-uninstall-filter-ptx-3	requestMethod.eth_uninstallFilter	[_filterID]			
									
uninstall a uninstalled filter (log filter)									
			create New Block Filter	Invalid-uninstall-filter-log-1	requestMethod.eth_newFilter	[{}]		result=>filterID	
			uninstall the block Filter	Invalid-uninstall-filter-log-2	requestMethod.eth_uninstallFilter	[_filterID]			
			delay	delay	helper.delay	[500]			
			uninstall the uninstalled Block filter	Invalid-uninstall-filter-log-3	requestMethod.eth_uninstallFilter	[_filterID]			
									
									
[Java] eth_signTransaction inputs-test									
			unlock an account	unlock an account	requestMethod.personal_unlockAccount	[_acc1,password,12]			acc1=0xa054340a3152d10006b66c4248cfa73e5725056294081c476c0e67ef5ad25334,acc2=0xa00a2d0d10ce8a2ea47a76fbb935405df2a12b0e2bc932f188f84b5f16da9c2c
			sign the transaction	sign the transaction	requestMethod.eth_signTransaction	[{from:_acc1,gas:21000,to:_acc2,value:123},_acc1]			
									
									
submitblock with empty array									
			submitblock with empty array	submitblock with empty array	requestMethod.submitblock	[]			
									
									
test procomile functions with eth_call	x								
	x		get block number	PPC-Test	requestMethod.eth_blockNumber	[]		result=>blockNumber	acc1=0xa054340a3152d10006b66c4248cfa73e5725056294081c476c0e67ef5ad25334,acc2=0xa07e185919beef1e0a79fea78fcfabc24927c5067d758e514ad74b905a2bf137
	x		Prepare validation data for blake2b256	PPC-Test-local-blake2b-valiPre	validationFunction.validateBlake2b.pre	{from:_acc1,data:012345}			
	x	x	perpare the data for eth_call	PPC-Test-local-blake2b-pre	helper.prepareContractCall	[prec_blake2b256,_nextTxObj.data]			
	x	x	local call blake2b256	PPC-Test-local-blake2b-call	requestMethod.eth_call	[{from:_acc1}]			
	x		Process validation data for blake2b256	PPC-Test-local-blake2b-valiPost	validationFunction.validateBlake2b.post				
	x		perpare the data for eth_call	PPC-Test-local-txhash-1	helper.prepareContractCall	[prec_transactionhash]			
	x	x	local call transactionhash	PPC-Test-local-txhash-2	requestMethod.eth_call	[{}]			
	x		validate format	PPC-Test-local-txhash-3	validFormat	[matches,TRANSACTION_HASH]			
	x		Prepare validation data for edverify	PPC-Test-local-edverify-valiPre	validationFunction.validateSignature.pre	[{to:_acc1,from:_acc2,value:100,gas:0x6000}]			
	x		prepare the data for eth_call	PPC-Test-local-edverify-pre	helper.prepareContractCall	[prec_edverify,_hash,_publicKey,_sign1,_sign2]			
	x	x	local call ebverify	PPC-Test-local-edverify-call	requestMethod.eth_call	[{from:_acc1}]			
	x		Process validation data for edverify	PPC-Test-local-edverify-valiPost	validationFunction.validateSignature.post				
test procomile functions by calling function address		x							
			unlock an account to deploy the contract	PPC-Test	requestMethod.personal_unlockAccount	[_acc1,password,100000]			acc1=0xa054340a3152d10006b66c4248cfa73e5725056294081c476c0e67ef5ad25334,acc2=0xa07e185919beef1e0a79fea78fcfabc24927c5067d758e514ad74b905a2bf137
			perpare the data for eth_transaction	PPC-Test-blake2b-pre	helper.prepareContractCall	[prec_blake2b256 01920192]			
		x	local call blake2b256	PPC-Test-blake2b-sendTx	requestMethod.eth_sendTransaction	[{from:_acc1}]			
			get Transaction Receipt blake2b256	PPC-Test-blake2b-rpt	requestMethod.eth_getTransactionReceipt	[_txHash]			
			validate format	PPC-Test-blake2b-rpt-vali	validFormat	[equal,0x1,status]			
			perpare the data for eth_transaction	PPC-Test-txhash-pre	helper.prepareContractCall	[prec_transactionhash]			
		x	local call transactionhash - send transaction	PPC-Test-txhash-sendTx	requestMethod.eth_sendTransaction	[{from:_acc1}]			
			get Transaction Receipt txhash	PPC-Test-txhash-rpt	requestMethod.eth_getTransactionReceipt	[_txHash]			
			validate format	PPC-Test-txhash-rpt-vali	validFormat	[equal,0x1,status]			
			perpare the data for eth_transaction	PPC-Test-edverify-pre	helper.prepareContractCall	[prec_edverify,_hash,_publicKey,_sign1,_sign2]			
		x	local call ebverify	PPC-Test-edverify-sendtx	requestMethod.eth_sendTransaction	[{from:_acc1}]			
			get Transaction Receipt edverify	PPC-Test-edverify-rpt	requestMethod.eth_getTransactionReceipt	[_txHash]			
			validate format	PPC-Test-blake2b-rpt-vali	validFormat	[equal,0x1,status]			
									
test procomile functions in contract	x	x							
	x		unlock an account to deploy the contract	PPC-Test	requestMethod.personal_unlockAccount	[_acc1,password,100000]			acc1=0xa054340a3152d10006b66c4248cfa73e5725056294081c476c0e67ef5ad25334,acc2=0xa07e185919beef1e0a79fea78fcfabc24927c5067d758e514ad74b905a2bf137
	x		compile test contract	PPC-Test-contract	requestMethod.eth_compileSolidity	TestPreCompile.sol			
	x		xxxxxxxx	xxxxxxxx	helper.newContract	[ContractDepth2]			
	x	x	deploy the test contract - ContractDepth2	PPC-Test-contract	requestMethod.eth_sendTransaction	[{from:_acc1,gas:300000}]			
	x		get the contract address	PPC-Test-contract	requestMethod.eth_getTransactionReceipt	[_txHash]	contractAddress=>secContractAddress	result.contractAddress=>contractAddress	
	x		yyyyyyyyyyyy	yyyyyyyyyyyyy	helper.newContract	[TestPrecompile]			
	x	x	deploy the test contract -TestPrecompile	PPC-Test-contract	requestMethod.eth_sendTransaction	[{from:_acc1,gas:300000}]			
	x		get the contract address	PPC-Test-contract	requestMethod.eth_getTransactionReceipt	[_txHash]		result.contractAddress=>contractAddress	
			Prepare validation data for blake2b256	PPC-Test-contract	validationFunction.validateBlake2b.pre	{data:012345,type:bytes32}			
		x	xxxxxxxxxxxxx	xxxxxxxxx	helper.prepareContractCall	[testBlake2b256,_nextTxObj.data]			
		x	call function blake2b256	PPC-Test-contract	requestMethod.eth_sendTransaction	[{from:_acc1,to:_contractAddress}]			
			get Transaction Receipt blake2b256	PPC-Test-contract	validationFunction.validateBlake2b.post	[0,66]			
test procomile transactionhash function	x	x							
	x		xxxxxxxxxxxxx	xxxxxxxxx	helper.prepareContractCall	[testTransactionhash]			
	x	x	call function transactionhash	PPC-Test-contract	requestMethod.eth_sendTransaction	[{from:_acc1,to:_contractAddress}]			
	x		get Transaction Receipt transactionhash	PPC-Test-contract	requestMethod.eth_getTransactionReceipt	[_txHash]			
	x		yyyyyyyyyyyyyy	ttttttttttttttttttt	validFormat	[equal,_txHash,Logs.0.data]			
test procomile edverify function	x	x							
	x		Prepare validation data for edverify	PPC-Test-local-edverify-valiPre	validationFunction.validateSignature.pre	[{to:_acc1,from:_acc2,value:100,gas:0x6000}]			
	x		xxxxxxxx	xxxxxxxx	helper.prepareContractCall	[testEdverify,_hash,_publicKey,_sign1,_sign2]			sign_invalid=0x0004340a3152d10006b66c4248cfa73e5725056294081c476c0e67ef5ad25334
	x	x	call function ebverify	PPC-Test-contract	requestMethod.eth_sendTransaction	[{from:_acc1}]			
									
	x		Prepare validation data for edverify	PPC-Test-local-edverify-valiPre	validationFunction.validateSignature.post	[0,1]			
	x		xxxxxxxx	xxxxxxxx	helper.prepareContractCall	[testEdverify,_hash,_publicKey,_sign1,_sign_invalid]			
	x		call function ebverify-invalid	PPC-Test-contract	requestMethod.eth_sendTransaction	{from:_acc1}			
	x		get Transaction Receipt edverify invalid	PPC-Test-contract	requestMethod.eth_getTransactionReceipt	[_txHash]			
	x		validate invalid ebverify-invalid	xxxxxxxx	validFormat	[equal,0x0000000000000000000000000000000000000000000000000000000000000000,Logs.0.data]			
									
test txhash in depth=2	x	x							
	x		xxxxxxxxxxxxxxxxxx	xxxxxxxx	helper.prepareContractCall	[testTransactionhashFromAnotherCnt,_secContractAddress]			
	x	x	call function transactionhash where contract depth = 2	PPC-Test-2-contract	requestMethod.eth_sendTransaction	[{from:_acc1}]			
									
	x		get Transaction Receipt  transactionhash where contract depth = 2	PPC-Test-2-contract	requestMethod.eth_getTransactionReceipt	[_txHash]			
	x		yyyyyyyyyyyyyy	ttttttttttttttttttt	validFormat	[equal,_txHash,Logs.0.data]			
			get Logs	PPC-Test	requestMethod.eth_getLogs	[{address:_contractAddress,fromBlock:_blockNumber,toBlock:latest}]			
